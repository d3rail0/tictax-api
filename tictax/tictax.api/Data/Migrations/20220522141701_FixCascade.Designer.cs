// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using entities;

namespace tictax.api.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220522141701_FixCascade")]
    partial class FixCascade
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("entities.Model.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreationTime")
                        .HasColumnType("int");

                    b.Property<string>("OpponentUsername")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OwnerUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OpponentUsername");

                    b.HasIndex("OwnerUsername");

                    b.ToTable("Match");
                });

            modelBuilder.Entity("entities.Model.ProfileActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ActivityTime")
                        .HasColumnType("bigint");

                    b.Property<string>("UsernameFrom")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsernameTo")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UsernameFrom");

                    b.HasIndex("UsernameTo");

                    b.ToTable("ProfileActivity");
                });

            modelBuilder.Entity("entities.Model.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("TotalGames")
                        .HasColumnType("int");

                    b.Property<int>("TotalLoses")
                        .HasColumnType("int");

                    b.Property<int>("TotalWins")
                        .HasColumnType("int");

                    b.HasKey("Username");

                    b.ToTable("User");
                });

            modelBuilder.Entity("entities.Model.Match", b =>
                {
                    b.HasOne("entities.Model.User", "Opponent")
                        .WithMany("OpponentMatches")
                        .HasForeignKey("OpponentUsername");

                    b.HasOne("entities.Model.User", "Owner")
                        .WithMany("OwnerMatches")
                        .HasForeignKey("OwnerUsername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Opponent");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("entities.Model.ProfileActivity", b =>
                {
                    b.HasOne("entities.Model.User", "Initiator")
                        .WithMany("InitiatorProfileActivites")
                        .HasForeignKey("UsernameFrom");

                    b.HasOne("entities.Model.User", "Recipient")
                        .WithMany("RecipientProfileActivites")
                        .HasForeignKey("UsernameTo");

                    b.Navigation("Initiator");

                    b.Navigation("Recipient");
                });

            modelBuilder.Entity("entities.Model.User", b =>
                {
                    b.Navigation("InitiatorProfileActivites");

                    b.Navigation("OpponentMatches");

                    b.Navigation("OwnerMatches");

                    b.Navigation("RecipientProfileActivites");
                });
#pragma warning restore 612, 618
        }
    }
}
